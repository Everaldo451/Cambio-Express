services:

  backend:
    container_name: backend
    build:
      context: ./backend
    depends_on:
      db:
        condition:
          service_healthy
    environment:
      - SECRET_KEY=${API_SECRET_KEY}
      - DB_NAME=${MYSQL_DATABASE}
      - DB_USER=root
      - DB_HOST=db
      - DB_PORT=3306
      - DB_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - FRONT_HOST=nginx
      - FRONT_PORT=80
    networks:
      - app-network
  
  frontend:
    container_name: frontend
    build:
      context: ./frontend
    depends_on:
      - backend
    environment:
      - API_HOST=backend
      - API_PORT=8000
      - PROXY_HOST=nginx
      - PROXY_PORT=80
    networks:
      - app-network

  nginx:
    container_name: nginx
    build:
      context: ./nginx
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"
    environment:
      - FRONT_HOST=frontend
      - FRONT_PORT=3000
      - API_HOST=backend
      - API_PORT=8000
    networks:
      - app-network

  db:
    image: mysql:latest
    restart: always
    container_name: db
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    networks:
      - app-network
    volumes:
      - mysql_data:/var/lib/mysql

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
  