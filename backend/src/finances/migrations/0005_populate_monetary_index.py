# Generated by Django 5.2 on 2025-08-19 14:09

from django.db import migrations, transaction
from backend.core.types.finances import DataFrequencies, CalculationTypes
from backend.core.types.apis import APIParamValueTypes

@transaction.atomic
def populate_monetary_index(apps, schema_editor):
    APIParam = apps.get_model('apis', 'APIParam')
    APIConfig = apps.get_model('apis', 'APIConfig')
    Currency = apps.get_model('finances', 'Currency')
    MonetaryIndex = apps.get_model('finances', 'MonetaryIndex')

    monetary_indexs = [
        {
            'name': 'Índice de Preços ao Consumidor Amplo',
            'symbol': 'IPCA',
            'data_frequency': DataFrequencies.MONTHLY.value,
            'calculation_type': CalculationTypes.ACCUMULATED.value,
            'currency': 'BRL',
            'api_config': {
                'name': 'BCB IPCA API',
                'base_url': 'https://api.bcb.gov.br',
                'endpoint': '/dados/serie/bcdata.sgs.4447/dados',
                'params': [
                    {
                        'name': 'dataInicial',
                        'value_type': APIParamValueTypes.DATE.value,
                        'required': False,
                        'format': '%d/%m/%Y'
                    },
                    {
                        'name': 'dataFinal',
                        'value_type': APIParamValueTypes.DATE.value,
                        'required': False,
                        'format': '%d/%m/%Y'
                    }
                ]
            }
        },
        {
            'name': 'Sistema Especial de Liquidação e de Custódia',
            'symbol': 'SELIC',
            'data_frequency': DataFrequencies.DAILY.value,
            'calculation_type': CalculationTypes.CALCULATED.value,
            'currency': 'BRL',
            'api_config': {
                'name': 'BCB SELIC API',
                'base_url': 'https://api.bcb.gov.br',
                'endpoint': '/dados/serie/bcdata.sgs.11/dados',
                'params': [
                    {
                        'name': 'dataInicial',
                        'value_type': APIParamValueTypes.DATE.value,
                        'required': False,
                        'format': '%d/%m/%Y'
                    },
                    {
                        'name': 'dataFinal',
                        'value_type': APIParamValueTypes.DATE.value,
                        'required': False,
                        'format': '%d/%m/%Y'
                    }
                ]
            }
        },
    ]

    for monetary_index_fields in monetary_indexs:
        api_config_fields = monetary_index_fields.pop('api_config')
        api_params_fields = api_config_fields.pop('params')
        api_config = APIConfig.objects.create(**api_config_fields)
        for param_fields in api_params_fields:
            APIParam.objects.create(**param_fields, api_config=api_config)
        currency_field = monetary_index_fields.pop('currency')
        currency = Currency.objects.get(code=currency_field)
        MonetaryIndex.objects.create(**monetary_index_fields, api_config=api_config, currency=currency)
        



class Migration(migrations.Migration):

    dependencies = [
        ('finances', '0004_alter_monetaryindex_api_config'),
    ]

    operations = [
        migrations.RunPython(populate_monetary_index)
    ]
